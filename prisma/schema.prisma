generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model identities {
  provider_id     String
  user_id         String     @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime?  @db.Timestamptz(6)
  created_at      DateTime?  @db.Timestamptz(6)
  updated_at      DateTime?  @db.Timestamptz(6)
  email           String?    @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_challenges {
  id          String      @id @db.Uuid
  factor_id   String      @db.Uuid
  created_at  DateTime    @db.Timestamptz(6)
  verified_at DateTime?   @db.Timestamptz(6)
  ip_address  String      @db.Inet
  mfa_factors mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_factors {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  friendly_name  String?
  factor_type    factor_type
  status         factor_status
  created_at     DateTime         @db.Timestamptz(6)
  updated_at     DateTime         @db.Timestamptz(6)
  secret         String?
  mfa_challenges mfa_challenges[]
  users          auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  from_ip_address String?       @db.Inet
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model auth_users {
  instance_id                 String?        @db.Uuid
  id                          String         @id @db.Uuid
  aud                         String?        @db.VarChar(255)
  role                        String?        @db.VarChar(255)
  email                       String?        @db.VarChar(255)
  encrypted_password          String?        @db.VarChar(255)
  email_confirmed_at          DateTime?      @db.Timestamptz(6)
  invited_at                  DateTime?      @db.Timestamptz(6)
  confirmation_token          String?        @db.VarChar(255)
  confirmation_sent_at        DateTime?      @db.Timestamptz(6)
  recovery_token              String?        @db.VarChar(255)
  recovery_sent_at            DateTime?      @db.Timestamptz(6)
  email_change_token_new      String?        @db.VarChar(255)
  email_change                String?        @db.VarChar(255)
  email_change_sent_at        DateTime?      @db.Timestamptz(6)
  last_sign_in_at             DateTime?      @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?      @db.Timestamptz(6)
  updated_at                  DateTime?      @db.Timestamptz(6)
  phone                       String?        @unique
  phone_confirmed_at          DateTime?      @db.Timestamptz(6)
  phone_change                String?        @default("")
  phone_change_token          String?        @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?      @db.Timestamptz(6)
  confirmed_at                DateTime?      @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?        @default("") @db.VarChar(255)
  email_change_confirm_status Int?           @default(0) @db.SmallInt
  banned_until                DateTime?      @db.Timestamptz(6)
  reauthentication_token      String?        @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?      @db.Timestamptz(6)
  is_sso_user                 Boolean        @default(false)
  deleted_at                  DateTime?      @db.Timestamptz(6)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  sessions                    sessions[]
  users                       public_users[]

  @@index([instance_id])
  @@map("users")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model article {
  id                                  BigInt    @id @default(autoincrement())
  lang                                BigInt?
  slug                                String?
  title                               String?
  cover                               BigInt?
  abstract                            String?
  content                             Json?     @db.Json
  is_draft                            Boolean?  @default(true)
  is_featured                         Boolean?  @default(false)
  is_top                              Boolean?  @default(false)
  is_premium                          Boolean?  @default(false)
  page_view                           BigInt?   @default(0)
  updated_at                          DateTime? @default(now()) @db.Timestamptz(6)
  created_at                          DateTime  @default(now()) @db.Timestamptz(6)
  category                            BigInt?
  topic                               BigInt?
  subtitle                            String?
  category_article_categoryTocategory category? @relation("article_categoryTocategory", fields: [category], references: [id])
  image                               image?    @relation(fields: [cover], references: [id])
  language                            language? @relation(fields: [lang], references: [id])
  topic_article_topicTotopic          topic?    @relation("article_topicTotopic", fields: [topic], references: [id])
  comment                             comment[]

  @@unique([lang, slug])
  @@index([slug, title])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model category {
  id                                 BigInt      @id @default(autoincrement())
  lang                               BigInt?
  slug                               String?
  title                              String?
  description                        String?
  cover                              BigInt?
  created_at                         DateTime    @default(now()) @db.Timestamptz(6)
  type                               ContentType @default(article)
  article_article_categoryTocategory article[]   @relation("article_categoryTocategory")
  image                              image?      @relation(fields: [cover], references: [id])
  language                           language?   @relation(fields: [lang], references: [id])
  photo_photo_categoryTocategory     photo[]     @relation("photo_categoryTocategory")
  video_video_categoryTocategory     video[]     @relation("video_categoryTocategory")

  @@unique([lang, slug])
  @@index([slug, title])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model comment {
  id                                      BigInt        @id @default(autoincrement())
  user_id                                 BigInt?
  toxic_score                             Int?          @db.SmallInt
  content                                 Json?         @db.Json
  to_thought                              BigInt?
  to_photo                                BigInt?
  is_blocked                              Boolean?      @default(false)
  created_at                              DateTime      @default(now()) @db.Timestamptz(6)
  to_article                              BigInt?
  to_video                                BigInt?
  reply_to                                BigInt?       @default(0)
  upvote                                  Int           @default(0)
  downvote                                Int           @default(0)
  is_anonymous                            Boolean?
  comment_comment_idTocomment             comment       @relation("comment_idTocomment", fields: [id], references: [id], onDelete: SetDefault)
  other_comment_comment_idTocomment       comment?      @relation("comment_idTocomment")
  comment_comment_reply_toTocomment       comment?      @relation("comment_reply_toTocomment", fields: [reply_to], references: [id])
  other_comment_comment_reply_toTocomment comment[]     @relation("comment_reply_toTocomment")
  article                                 article?      @relation(fields: [to_article], references: [id], onDelete: Cascade)
  photo                                   photo?        @relation(fields: [to_photo], references: [id], onDelete: Cascade)
  thought                                 thought?      @relation(fields: [to_thought], references: [id], onDelete: Cascade)
  video                                   video?        @relation(fields: [to_video], references: [id], onDelete: Cascade)
  users                                   public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model config {
  id         BigInt   @default(autoincrement())
  name       String   @unique
  value      String
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@id([id, name])
  @@index([name])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model image {
  id         BigInt     @id @default(autoincrement())
  file_name  String
  caption    String?
  date       String
  time       String
  format     String
  exif       Json?      @db.Json
  gps        Json?      @db.Json
  location   String?
  taken_at   DateTime?  @db.Timestamptz(6)
  width      Int?       @db.SmallInt
  height     Int?       @db.SmallInt
  size       BigInt?
  has_alpha  Boolean?   @default(false)
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  photo_id   BigInt?
  thought_id BigInt?
  alt        String?
  article    article[]
  category   category[]
  photo      photo?     @relation(fields: [photo_id], references: [id])
  thought    thought?   @relation(fields: [thought_id], references: [id])
  video      video[]

  @@unique([date, time, file_name, format])
  @@index([file_name], map: "image_raw_idx")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model language {
  id         BigInt     @id @default(autoincrement())
  lang       String?    @unique
  locale     String?    @unique
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  is_default Boolean    @default(false)
  article    article[]
  category   category[]
  photo      photo[]
  topic      topic[]
  video      video[]

  @@index([lang])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model message {
  id             BigInt        @id @default(autoincrement())
  message        Json          @db.Json
  name           String
  contact_type   Communication @default(email)
  contact_detail String
  created_at     DateTime      @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model photo {
  id                                BigInt    @id @default(autoincrement())
  lang                              BigInt?
  slug                              String?
  title                             String?
  description                       String?
  abstract                          String?
  created_at                        DateTime  @default(now()) @db.Timestamptz(6)
  update_at                         DateTime? @db.Timestamptz(6)
  is_draft                          Boolean?  @default(true)
  is_featured                       Boolean?  @default(false)
  is_top                            Boolean?  @default(false)
  page_view                         BigInt?   @default(0)
  cover_index                       Int       @default(0) @db.SmallInt
  category                          BigInt?
  topic                             BigInt?
  comment                           comment[]
  images                            image[]
  category_photo_categoryTocategory category? @relation("photo_categoryTocategory", fields: [category], references: [id])
  language                          language? @relation(fields: [lang], references: [id])
  topic_photo_topicTotopic          topic?    @relation("photo_topicTotopic", fields: [topic], references: [id])

  @@unique([lang, slug])
  @@index([slug, title])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model stats {
  id             BigInt   @id @default(autoincrement())
  date           DateTime @unique @default(now()) @db.Date
  post_article   Int?     @default(0)
  post_photo     Int?     @default(0)
  upload_picture Int?     @default(0)
  post_video     Int?     @default(0)
  post_thought   Int?     @default(0)
  comment        Int?     @default(0)
  message        Int?     @default(0)
  page_view      Int?     @default(0)
  new_user       Int?     @default(0)
  character      Int?     @default(0)

  @@index([date])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model thought {
  id                         BigInt    @id @default(autoincrement())
  slug                       String?   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content                    String?   @default("")
  location                   String?
  created_at                 DateTime  @default(now()) @db.Timestamptz(6)
  topic                      BigInt?
  upvote                     Int       @default(0)
  comment                    comment[]
  images                     image[]
  topic_thought_topicTotopic topic?    @relation("thought_topicTotopic", fields: [topic], references: [id])

  @@index([slug])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model topic {
  id                           BigInt    @id @default(autoincrement())
  lang                         BigInt?
  slug                         String?
  title                        String?
  created_at                   DateTime  @default(now()) @db.Timestamptz(6)
  article_article_topicTotopic article[] @relation("article_topicTotopic")
  photo_photo_topicTotopic     photo[]   @relation("photo_topicTotopic")
  thought_thought_topicTotopic thought[] @relation("thought_topicTotopic")
  language                     language? @relation(fields: [lang], references: [id])
  video_video_topicTotopic     video[]   @relation("video_topicTotopic")

  @@unique([lang, slug])
  @@index([lang, slug])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model public_users {
  id           BigInt         @id @default(autoincrement())
  user_id      String         @db.Uuid
  name         String?
  source       String?
  last_seen    DateTime?      @db.Timestamptz(6)
  current_ip   String?
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  role         Role           @default(reader)
  comment      comment[]
  notification notification[]
  users        auth_users     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("users")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model video {
  id                                BigInt    @id @default(autoincrement())
  lang                              BigInt?
  slug                              String?
  title                             String?
  cover                             BigInt?
  description                       Json?     @db.Json
  abstract                          String?
  youtube                           String?
  bilibili                          String?
  xigua                             String?
  vimeo                             String?
  self_host                         String?
  page_view                         BigInt?   @default(0)
  is_draft                          Boolean?  @default(true)
  is_featured                       Boolean?  @default(false)
  is_top                            Boolean?  @default(false)
  updated_at                        DateTime? @default(now()) @db.Timestamptz(6)
  created_at                        DateTime  @default(now()) @db.Timestamptz(6)
  category                          BigInt?
  topic                             BigInt?
  comment                           comment[]
  category_video_categoryTocategory category? @relation("video_categoryTocategory", fields: [category], references: [id])
  image                             image?    @relation(fields: [cover], references: [id])
  language                          language? @relation(fields: [lang], references: [id])
  topic_video_topicTotopic          topic?    @relation("video_topicTotopic", fields: [topic], references: [id])

  @@unique([lang, slug])
  @@index([slug, title])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model link {
  id          BigInt    @id @default(autoincrement())
  url         String?
  title       String?
  description String?
  og_image    String?
  content     String?
  screenshot  String?
  click_count Int?      @default(0)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model friend {
  id         BigInt   @id @default(autoincrement())
  title      String
  link       String   @unique
  rss        String?  @unique
  bio        String?
  avatar     String?
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notification {
  id         BigInt        @id @default(autoincrement())
  user_id    BigInt?
  content    String?
  link       String?
  is_read    Boolean?      @default(false)
  readed_at  DateTime?     @db.Timestamptz(6)
  created_at DateTime      @default(now()) @db.Timestamptz(6)
  users      public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn

  @@schema("auth")
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum Communication {
  email
  wechat
  telegram
  twitter
  line
  whatsapp

  @@schema("public")
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum ContentType {
  article
  photo
  video

  @@schema("public")
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum Role {
  admin
  reader
  exile

  @@schema("public")
}
